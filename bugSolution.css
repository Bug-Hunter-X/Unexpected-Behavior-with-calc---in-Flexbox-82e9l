To address this, consider alternative approaches like using `flex-basis` and margins instead of relying on `calc()` directly within the flexbox container.  If you must use `calc()`, ensure the percentage values are calculated correctly after the flexbox layout is determined. You might need to consider using JavaScript for more complex scenarios where percentage calculation requires the final rendered size. Here's an example of a potential solution:

```css
.container {
  display: flex;
}

.item {
  flex-basis: 0;
  flex-grow: 1;
  margin-right: 10px; /* Instead of using calc() */
}
```

This approach utilizes `flex-grow` to distribute available space among the items, and `margin-right` provides consistent spacing. This is generally preferred over complex `calc()` calculations within a flexbox context.